/*!
 * Service Worker
 * @author Chris Burnell <@iamchrisburnell>
 */
!function(){"use strict";var VERSION="09",CACHE_NAME="chrisburnell",FILE_NAME="serviceworker.min.js",urlsToCache=["/","/about","/articles","/pens","/tags","/search","/search.json","/styleguide","/css/main.min.css","/js/main.min.js","/images/avatar.png"],CONSOLE_FEEDBACK=!0,WORKER_LABEL="v"+VERSION+" WORKER: ",CLIENT_LABEL="v"+VERSION+" CLIENT: ";"serviceWorker"in navigator&&(CONSOLE_FEEDBACK&&console.log(CLIENT_LABEL,"Registration in progress."),navigator.serviceWorker.register("/"+FILE_NAME).then(function(registration){CONSOLE_FEEDBACK&&console.log(CLIENT_LABEL,"Registration completed, with scope:",registration.scope)})["catch"](function(err){CONSOLE_FEEDBACK&&console.log(CLIENT_LABEL,"Registration failed, with error:",err)})),self.addEventListener("install",function(event){CONSOLE_FEEDBACK&&console.log(WORKER_LABEL,"`install` event in progress."),event.waitUntil(caches.open("v"+VERSION+"::"+CACHE_NAME).then(function(cache){return cache.addAll(urlsToCache)}).then(function(){CONSOLE_FEEDBACK&&console.log(WORKER_LABEL,"`install` event completed.")}))}),self.addEventListener("fetch",function(event){return CONSOLE_FEEDBACK&&console.log(WORKER_LABEL,"`fetch` event in progress."),"GET"!==event.request.method?void(CONSOLE_FEEDBACK&&console.log(WORKER_LABEL,"`fetch` event ignored.",event.request.method,event.request.url)):void event.respondWith(caches.match(event.request).then(function(cached){function fetchedFromNetwork(response){var cacheCopy=response.clone();return CONSOLE_FEEDBACK&&console.log(WORKER_LABEL,"`fetch` response from network.",event.request.url),caches.open("v"+VERSION+"::"+CACHE_NAME).then(function(cache){cache.put(event.request,cacheCopy)}).then(function(){CONSOLE_FEEDBACK&&console.log(WORKER_LABEL,"`fetch` response stored in cache.",event.request.url)}),response}function unableToResolve(){return CONSOLE_FEEDBACK&&console.log(WORKER_LABEL,"`fetch` request failed in both cache and network"),new Response("<h1>Service Unavailable</h1>",{status:503,statusText:"Service Unavailable",headers:new Headers({"Content-Type":"text/html"})})}var networked=fetch(event.request).then(fetchedFromNetwork,unableToResolve)["catch"](unableToResolve);return CONSOLE_FEEDBACK&&console.log(WORKER_LABEL,"`fetch` event",cached?"(cached)":"(network)",event.request.url),cached||networked}))}),self.addEventListener("activate",function(event){CONSOLE_FEEDBACK&&console.log(WORKER_LABEL,"`activate` event in progress."),event.waitUntil(caches.keys().then(function(keys){return Promise.all(keys.filter(function(key){return!key.startsWith("v"+VERSION)}).map(function(key){return caches["delete"](key)}))}).then(function(){CONSOLE_FEEDBACK&&console.log(WORKER_LABEL,"`activate` event completed.")}))})}();
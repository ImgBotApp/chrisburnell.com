////
/// Content List
/// @group components
////


.content-list {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    flex-wrap: wrap;
    margin-bottom: $measure-large;
    line-height: $line-height-small;

    .page--home &,
    .widget & {
        margin-bottom: 0;
    }

    li {
        @include media(">small") {
            width: 49.0125%;
            display: flex;
            flex-direction: column;

            // Push all list items down (after the first two, in the
            // two-column format)
            &:nth-child(n+3) {
                margin-top: $measure-medium;
            }

            &:nth-child(4n+1),
            &:nth-child(4n+4) {
                a {
                    background-color: $color-black--5-percent;
                }
            }
        }

        @include media("<=small") {
            width: 100%;
            display: inline-block;

            // Push all list items down (after the first one, in the default
            // one-column format)
            & + li {
                margin-top: $measure-medium;
            }

            &:nth-child(2n+1) {
                a {
                    background-color: $color-black--5-percent;
                }
            }
        }

        aside & {
            width: 100%;

            // Push all list items down (after the first one, in the <aside>
            // one-column format)
            & + li {
                margin-top: $measure-small;
            }

            // Reset from above :(
            &:nth-child(4n+1),
            &:nth-child(4n+4) {
                a {
                    background-color: transparent;
                }
            }

            &:nth-child(2n+1) {
                a {
                    background-color: $color-black--5-percent;
                }
            }
        }
    }

    a {
        @include border-radius;
        display: block;
        padding: $measure-medium;
        border-bottom-width: 0;
        overflow: hidden;

        &:hover,
        &:focus,
        &:active {
            background-color: $color-brand--10-percent !important;
        }

        @include media(">small") {
            flex: 1 0 auto;
        }

        aside & {
            padding: $measure-small;
        }
    }

    .title,
    .lede,
    .date {
        text-shadow: 0 $border-width-hairline 0 $color-white;
    }

    .title {
        @include transition(border-color);
        @include will-change(border-color);
        width: auto;
        display: inline-block;
        border-bottom: $border-width-hairline $border-style-default $color-text-light;
        margin-bottom: 0;
    }
    a:hover,
    a:focus,
    a:active {
        .title {
            border-bottom-color: $color-brand;
        }
    }
    a:visited:hover,
    a:visited:focus,
    a:visited:active {
        .title {
            border-bottom-color: $color-brand--dark;
        }
    }

    .lede,
    .date {
        color: $color-text-alt;
        margin-top: $measure-small;
        font-size: $font-size-small;
        font-weight: $font-weight-bold;
    }

    .lede {
        margin-bottom: 0;
    }

    .date {
        @include media(">medium") {
            text-align: right;
        }

        &::before {
            // EN DASH, NO-BREAK SPACE
            content: "â€“ ";
        }
    }

    svg {
        @include transition(opacity, transform);
        @include will-change(opacity, transform);
        opacity: opacity("5-percent");
        stroke: $color-text;
        // override `_icons.scss` + 4px
        width:  6.25em !important;
        height: 6.25em !important;
        position: absolute;
        top: 50%;
        right: $measure-small;
        transform-origin: right center;
        transform: translateY(-50%);
        z-index: z-index(root);

        @include media("<=small") {
            width:  4em !important;
            height: 4em !important;
        }
    }
    a:hover,
    a:focus,
    a:active {
        svg {
            opacity: opacity("10-percent");
            transform: rotateZ(-$rotation-default) translateX(-$measure-medium) translateY(-50%) scale(1.2);
        }
    }
}

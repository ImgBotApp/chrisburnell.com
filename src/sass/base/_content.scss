////
/// Content
/// @group base
////


html {
    @include font-family(default);
    @include v(background-color, kaiser);
    @include v(font-size, default);
    font-style: normal;
    @include v(font-weight, default);
    line-height: $line-height-default;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    font-feature-settings: "lnum" 1;
}

/**
 * Content Elements
 */
blockquote,
details,
table,
dl,
ol,
ul,
figure:not([class]),
p {
    @extend %content-elements !optional;
}

/**
 * Heading Elements
 */
h1,
h2,
h3,
h4,
h5,
h6 {
    @extend %heading-elements !optional;
    padding: 0;
    margin: 0;
    position: relative;
    @include v(font-weight, default);

    // For special Monospace titles
    %monospace-elements {
        @include case(none);
    }
}

/**
 * Heading - Alpha
 */
.alpha,
%alpha {
    @include case(uppercase);
    @include font-family(alpha);
    @include v(font-size, alpha);
    line-height: 1;
    // 4px 4px
    text-shadow: 0.250rem 0.250rem 0 $color-black--delta;

    @include media("screen", "<=small") {
        font-size: #{$font-size-alpha / 1.285}; // 56px
    }
}
h1 {
    @extend %alpha !optional;
}

/**
 * Heading - Beta
 */
.beta,
%beta {
    @include v(font-size, beta);
    line-height: $line-height-small;
}
h2 {
    @extend %beta !optional;
}

/**
 * Heading - Gamma
 */
.gamma,
%gamma {
    @include v(font-size, gamma);
    line-height: 1.875;
}
h3 {
    @extend %gamma !optional;
    @include case(uppercase);
    margin-top: $measure-large;
    border-bottom: $border-width-thin $border-style-default $color-alto;
    @include v(font-weight, bold);

    &:not(:last-child) {
        margin-bottom: $measure-medium;
    }

    // Match normal `h3`s without targetting `aside`-nested `h3`s
    .content > &,
    .widget & {
        @include clear;
        width: auto;
        max-width: 100%;
        display: inline-block;
        padding-right: $measure-large;

        @include media("screen", "<=medium") {
            align-self: flex-start;
        }
    }

    // Collapse margin-top when following a Featured Lede
    // This happens on the Homepage
    .lede + & {
        margin-top: 0;
    }
}

/**
 * Heading - Delta
 */
.delta,
%delta {
    @include v(font-size, default);
    @include v(font-weight, bold);
    line-height: $line-height-small;
}
h4 {
    @extend %delta !optional;
    margin-bottom: $measure-small;
}

/**
 * Heading - Epsilon
 */
.epsilon,
%epsilon {
    @include v(font-size, default);
    line-height: $line-height-small;
}
h5 {
    @extend %epsilon !optional;
}

/**
 * Heading - Zeta
 */
.zeta,
%zeta {
    @include v(font-size, default);
    line-height: $line-height-small;
}
h6 {
    @extend %zeta !optional;
}

p {
    margin: 0 0 $measure-medium;

    &:last-child,
    &.ciu_embed {
        margin-bottom: 0;
    }

    &:empty {
        display: none;
        visibility: hidden;
    }

    // Columnal Paragraphs
    &.columns {
        @include media("screen", ">small", "<=medium") {
            column-count: $max-columns;
            column-gap: $measure-medium;
        }

        @include media("screen", ">large") {
            column-count: $max-columns;
            column-gap: $measure-medium;
        }
    }
}

/**
 * Lists
 */
ol,
ul {
    padding: 0;
    margin: 0;
    list-style: none;
}
ol:not([class]),
ul:not([class]),
dl:not([class]),
.default-list {
    margin-bottom: $measure-medium;

    // List nested in a list, or list followed by a list
    & &,
    & + & {
        margin-top: $measure-medium;
    }
}
ol:not([class]),
ul:not([class]),
.default-list {
    li {
        padding-left: $measure-large;
        position: relative;

        &:not(:last-child) {
            margin-bottom: $measure-small;
        }

        &::before {
            @include absolute(top-left);
            @include v(font-weight, bold);
        }
    }
}
ol:not([class]),
ol.default-list {
    counter-reset: ordered-list;

    & > li {
        counter-increment: ordered-list;

        &::before {
            content: counter(ordered-list, decimal) ".";
            font-variant-numeric: tabular-nums;
            font-feature-settings: "tnum";
        }
    }

    &[reversed] {
        display: flex;
        flex-direction: column-reverse;
    }
}
ul:not([class]) li::before,
ul.default-list li::before {
    // BULLET
    content: "•";
    // 24px
    font-size: 1.5rem;
    line-height: 1;
}
dl {
    overflow: hidden;
}
dt {
    width: auto;
    min-width: 10rem;
    clear: left;
    padding-right: $measure-medium;
    @include v(font-weight, bold);

    @include media("screen", ">small") {
        float: left;
    }
}
dd {
    width: $wrapper-width-large;
    display: table-cell;
    margin: 0;
    overflow: hidden;
    vertical-align: top;

    &:not(:last-child) {
        padding-bottom: $measure-medium;
    }

    @include media("screen", "<=small") {
        width: auto;
        display: block;
        padding-left: $measure-medium;
    }
}

/**
 * Images and Figures
 */
img,
svg,
picture {
    @extend %image-elements !optional;
}
%image-elements {
    position: relative;

    &,
    a & {
        width: auto;
        max-width: 100%;
        height: auto;
    }
}
picture {
    &,
    img,
    svg {
        display: block;
    }
}
img {
    border-style: none;
}
svg:not(:root) {
    overflow: hidden;
}
figure {
    max-width: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    margin: 0 0 $measure-medium;

    // Allow for content to overflow without breaking the page with scrollbar
    &:not(.highlight) {
        overflow-x: auto;
        overflow-y: hidden;
    }

    & %image-elements,
    & > a,
    & > a %image-elements {
        @include border-radius;
    }

    & > a {
        display: block;
        text-decoration: none;
    }

    & > a
    figcaption {
        @include v(color, dove);
        font-style: italic;
    }

    figcaption {
        @include font-family(serif);
        display: flex;
        flex-direction: column;
        align-items: center;
        padding-top: $measure-medium;
        line-height: $line-height-small;
    }
}

/**
 * Tables
 */
table {
    min-width: 100%;
    flex: 1 0 auto;
    align-self: flex-start;
    overflow-x: auto;
    overflow-y: hidden;
    border-collapse: collapse;

    &.zebra {
        tbody tr:nth-child(even) td {
            @include v(background-color, black--delta);
            @include v(border-left-color, alto);
        }
    }
}
th,
td {
    @include transition(background-color, border-left-color);
    @include will-change(background-color, border-left-color);
    padding: $measure-small;
    text-align: left;
    user-select: text;
}
// Row Highlighting
/*table*/.highlight,
/*table*/.highlight--row {
    tbody tr:hover {
        td {
            @include v(border-left-color, alto);
        }

        td,
        & + tr td {
            @include v(border-top-color, alto);
        }

        th,
        td:not(:hover) {
            @include v(background-color, raven--gamma, true);
        }
    }
}
// Column Highlighting
/*table*/.highlight thead th:not(:empty),
/*table*/.highlight td,
/*table*/.highlight tfoot th:not(:empty),
/*table*/.highlight--columns thead th:not(:empty),
/*table*/.highlight--columns td,
/*table*/.highlight--columns tfoot th:not(:empty) {
    position: relative;

    &::after {
        @include absolute(left);
        @include transition(opacity);
        content: "";
        opacity: 0;
        @include v(background-color, raven--gamma);
        width: 100%;
        height: 200vw;
        pointer-events: none;
        @include v(z-index, above);
    }

    &:hover {
        &::after {
            opacity: 1;
        }
    }
}
// Head and Foot Cells
th {
    &:not(:empty) {
        @include v(background-color, black--delta);
    }

    thead &,
    tfoot & {
        @include v(font-weight, bold);
        white-space: nowrap;
    }

    tfoot & {
        border-top: $border-width-thin $border-style-default $color-alto;
    }
    /*tfoot*/.totals & {
        @include media("screen", ">medium") {
            text-align: right;
        }

        &::before {
            content: "Total:";
            padding-right: 0.5em;
            font-style: italic;

            @include media("screen", ">small") {
                float: left;
            }
        }
    }

    tbody & {
        font-style: italic;
        @include v(font-weight, default);
    }

    & + th {
        border-left: $border-width-thin $border-style-default $color-alto;
    }
}
// Body Cells
tbody th,
td {
    border-top: $border-width-thin $border-style-default $color-alto;

    & + td {
        border-left: $border-width-thin $border-style-default $color-alto;
    }
}
tbody th,
tbody tr:first-child td {
    @include v(border-top-color, alto);
}
tbody th {
    width: 1px;
    padding-right: $measure-medium;
    text-align: right;
    white-space: nowrap;

    & + td {
        @include v(border-left-color, alto);
    }
}

/**
 * Details and Summary
 */
details {
    @include border-radius(thin);
    @include v(background-color, mineshaft);
    @include v(color, white);
    width: 100%;
    max-width: $line-length-responsive;
    padding: $measure-small;
    margin-left:  auto;
    margin-right: auto;

    %content-elements {
        padding: 0 $measure-small $measure-small;
    }
}
summary {
    @include non-selectable;
    @include transition(transform);
    display: list-item;
    outline: 0;
    @include v(font-weight, bold);
    cursor: pointer;

    &:hover,
    &:focus {
        text-decoration: underline;
        -webkit-text-decoration-skip: objects;
    }

    details:not([open]) &:hover,
    details:not([open]) &:focus {
        transform: translateX($measure-small);
    }

    & + %content-elements {
        margin-top: $measure-small;
        border-top: $border-width-thin $border-style-default $color-raven;
        padding-top: $measure-medium;
    }
}

/**
 * Quotes
 */
blockquote {
    @include border-radius;
    @include font-family(serif);
    @include quotes;
    @include v(background-color, raven--gamma);
    width: 100%;
    max-width: $line-length-responsive;
    padding: $measure-medium;
    margin: 0 auto $measure-medium;

    p {
        &::before {
            content: open-quote;
        }

        &::after {
            content: close-quote;
        }

        &:not(:last-of-type) {
            &::after {
                @include visually-hidden;
            }
        }
    }

    cite {
        display: block;
        margin-top: $measure-medium;

        @include media("screen", ">small") {
            margin-left: $measure-large;
        }

        &::before {
            // HYPHEN, NO-BREAK SPACE
            content: "‐ ";
        }
    }
}
/*blockquote*/.twitter-tweet {
    margin: 0 auto $measure-medium !important;
    contain: strict;
}
q {
    @include quotes;
}

time {
    display: inline-block;
}

audio {
    width: 100%;
    max-width: $wrapper-width-small;
    display: block;

    &:not([controls]) {
        display: none;
        height: 0;
    }
}

hr {
    @include v(background-color, black--gamma);
    width: 100%;
    height: $border-width-thin;
    display: block;
    border: 0;
    margin: $measure-large 0;
    // show the overflow in Edge and IE
    overflow: visible;

    %content-elements + & {
        @include media("screen", "<=medium") {
            margin-top: $measure-medium;
        }
    }
}

/**
 * Inline Content Elements
 */
abbr[title],
blockquote,
cite,
dfn[title] {
    @include v(color, dove);
    font-style: italic;
}
abbr[title],
dfn[title] {
    border-bottom: $border-width-hairline dotted $color-dove;
    cursor: help;
}
abbr[title],
dfn[title],
ins {
    text-decoration: none;
}

small {
    @include v(font-size, small);
}

strong {
    @include v(font-weight, bold);
}

sub,
sup {
    @include v(font-size, small);
    line-height: 0;
    position: relative;
    vertical-align: baseline;
}
sub {
    bottom: -0.25em;
}
sup {
    top: -0.5em;
}

[hidden] {
    display: none;
}

/**
 * Touch Action
 */
a,
button,
input,
label,
select,
summary,
textarea {
    touch-action: manipulation;
}

/**
 * Mouse Selection
 */
::selection {
    @include v(background-color, raven);
    @include v(color, white);
}
.canada {
    &::selection {
        @include v(background-color, canada);
    }
}

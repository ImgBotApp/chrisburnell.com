////
/// Button
/// @group base
////


button,
.button {
    @extend %button-elements !optional;
    @include border-radius(thin);
    @include case(uppercase);
    @include font-family(alpha);
    @include non-selectable;
    @include transition(background-color);
    @include will-change(background-color, height, padding-bottom, margin-bottom, box-shadow, transform);
    @include v(background-color, bowhead);
    @include v(color, white);
    min-width: 8em;
    height: #{$line-height-code + strip-units($button-border-width)}em;
    display: inline-block;
    padding: 0 #{$button-border-width * 4} $button-border-width;
    border-width: 0;
    margin-top: $border-width-default;
    box-shadow: inset 0 (-$button-border-width) 0 0 $color-bowhead;
    box-shadow: inset 0 (-$button-border-width) 0 0 var(--color-bowhead);
    overflow: visible;
    position: relative;
    @include v(font-size, beta);
    line-height: $line-height-code;
    text-align: center;
    text-decoration: none;
    white-space: nowrap;
    cursor: pointer;
    appearance: none;

    &:hover,
    &:focus,
    &:active {
        @include v(background-color, raven);
    }

    &:active {
        height: #{$line-height-code}em;
        padding-bottom: 0;
        margin-bottom: $button-border-width;
        box-shadow: inset 0 (-$border-width-hairline) 0 0 $color-bowhead;
        box-shadow: inset 0 (-$border-width-hairline) 0 0 var(--color-bowhead);
        transform: translateY($button-border-width);
    }

    &::before,
    &::after {
        @include absolute(top-full);
        content: "";
        height: $button-border-width;
    }
    &:active {
        &::before,
        &::after {
            top: (-$button-border-width);
        }
    }

    // external anchors
    &[rel*="external"] {
        &::after {
            @include absolute(none);
            @include font-family(monospace);
            @include will-change(initial);
            // NO-BREAK SPACE, RIGHTWARDS ARROW
            content: " â†’";
            width:  auto; // unset `width` from above
            height: auto; // unset `height` from above
        }
    }

    &[disabled] {
        @include v(opacity, beta);
        pointer-events: none;
    }
}

/**
 * Apply moz fixes to `button` element only
 */
button {
    -webkit-font-smoothing: inherit;

    &::-moz-focus-inner {
        padding: 0;
        margin: 0;
    }

    &::-moz-focusring {
        outline: $border-width-hairline dotted ButtonText;
    }
}

.button--small {
    min-width: 5em;
    @include v(font-size, large);
    height: #{$line-height-code}em;
    margin-top: 0;
    line-height: #{$line-height-code - strip-units($button-border-width)};

    &:active {
        height: #{$line-height-code - strip-units($button-border-width)}em;
    }
}
